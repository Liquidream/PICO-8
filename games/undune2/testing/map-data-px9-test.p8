pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
-- test
function _init()
 palt(0,false) -- show blacks
 pal(3, 137, 1) -- dark green > dark orange
 pal(12, 140, 1) -- light blue > royal blue
 pal(11, 139, 1) -- light green > grass green
 pal(10, 3, 1) -- light green > grass green
 --pal(8, 136, 1) -- red > cherry
 pal(6, 143, 1) -- skin > peach
 pal(13, 134, 1) -- greyblue > beige

--[[
 cls()
 spr(0,0,0,16,16)
 rectfill(4,20,123,83,6)
 
 print("tHREE hOUSES HAVE\nCOME TO dUNE.",
   30,102,0)
 
 sx=4
 sy=20
 sw=119
 sh=64
 dx=4
 dy=20
 flipframe=4
 
 for i=1,20 do
 flip()
 end 
 
 fsspr(sx, sy, sw, sh, dx, dy, dw, dh, flipframe)
]]

 cls(1)
 reload(0x0, 0x0, 0x2000, "map-data1.p8")
 clen1 = px9_comp(0,0,128,128,
                 0x2000, sget)
 
 reload(0x0, 0x0, 0x2000, "map-data2.p8")
 clen2 = px9_comp(0,0,128,128,
                 0x2000+clen1,
                 sget)

 -- push screen data into this cart's sprite data
 cstore(0x0, 0x2000, clen1+clen2)
 --cstore(0x0, 0x2000, clen, "mycart_c.p8")
 
 --printh("length="..clen1+clen2)
 ?clen1+clen2,2,123,7
 -- job done
 ::_::
 flip()
 goto _
end

-- fizzlesspr
function fsspr(sx, sy, sw, sh, dx, dy, dw, dh, flipframe) -- [flip_x,] [flip_y] )
 num=0
 taps=0x3006
 lfsr=0x3fff

 for _x=0,127 do
  for _y=0,127 do
   num+=1
   if (num==0x4000) then
    num=0
    x,y = 0,0
   end
   x,y = band(lfsr,0x7f),flr(lshr(lfsr,7))
   lfsr = bxor(flr(lshr(lfsr,1)),band(-band(lfsr,1),taps))
   -- within draw region?
   if x>=sx and x<=sx+sw
    and y>=sy and y<=sy+sh then
    pset(dx-sx+x,dy-sy+y, sget(x,y))
   end
  end
  if(_x%flipframe==0)flip()
 end
end

-->8
-- gfx swap code


-->8
-- px9 decompress

-- x0,y0 where to draw to
-- src   compressed data address
-- vget  read function (x,y)
-- vset  write function (x,y,v)

function
	px9_decomp(x0,y0,src,vget,vset)

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
--]]

--[[ 7 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return
			end
		end
--]]
	end

	-- bit cache is between 16 and 
	-- 31 bits long with the next
	-- bit always aligned to the
	-- lsb of the fractional part
	local cache,cache_bits=0,0
	function getval(bits)
		if cache_bits<16 then
			-- cache next 16 bits
			cache+=%src>>>16-cache_bits
			cache_bits+=16
			src+=2
		end
		-- clip out the bits we want
		-- and shift to integer bits
		local val=cache<<32-bits>>>16-bits
		-- now shift those bits out
		-- of the cache
		cache=cache>>>bits
		cache_bits-=bits
		return val
	end

	-- get number plus n
	function gnp(n)
		local bits=0
		repeat
			bits+=1
			local vv=getval(bits)
			n+=vv
		until vv<(1<<bits)-1
		return n
	end

	-- header

	local 
		w,h_1,      -- w,h-1
		eb,el,pr,
		x,y,
		splen,
		predict
		=
		gnp"1",gnp"0",
		gnp"1",{},{},
		0,0,
		0
		--,nil

	for i=1,gnp"1" do
		add(el,getval(eb))
	end
	for y=y0,y0+h_1 do
		for x=x0,x0+w-1 do
			splen-=1

			if(splen<1) then
				splen,predict=gnp"1",not predict
			end

			local a=y>y0 and vget(x,y-1) or 0

			-- create vlist if needed
			local l=pr[a]
			if not l then
				l={}
				for e in all(el) do
					add(l,e)
				end
				pr[a]=l
			end

			-- grab index from stream
			-- iff predicted, always 1

			local v=l[predict and 1 or gnp"2"]

			-- update predictions
			vlist_val(l, v)
			vlist_val(el, v)

			-- set
			vset(x,y,v)

		end
	end
end


-->8
-- px9 compress

-- x0,y0 where to read from
-- w,h   image width,height
-- dest  address to store
-- vget  read function (x,y)

function 
px9_comp(x0,y0,w,h,dest,vget)

	local dest0=dest
	local bit=1 
	local byte=0

	local function vlist_val(l, val)
		-- find position and move
		-- to head of the list

--[ 2-3x faster than block below
		local v,i=l[1],1
		while v!=val do
			i+=1
			v,l[i]=l[i],v
		end
		l[1]=val
		return i
--]]

--[[ 8 tokens smaller than above
		for i,v in ipairs(l) do
			if v==val then
				add(l,deli(l,i),1)
				return i
			end
		end
--]]
	end

	function putbit(bval)
		if (bval) byte+=bit 
		poke(dest, byte) bit<<=1
		if (bit==256) then
			bit=1 byte=0
			dest += 1
		end
	end

	function putval(val, bits)
		for i=0,bits-1 do
			putbit(val&1<<i > 0)
		end
	end

	function putnum(val)
		local bits = 0
		repeat
			bits += 1
			local mx=(1<<bits)-1
			local vv=min(val,mx)
			putval(vv,bits)
			val -= vv
		until vv<mx
	end


	-- first_used

	local el={}
	local found={}
	local highest=0
	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			c=vget(x,y)
			if not found[c] then
				found[c]=true
				add(el,c)
				highest=max(highest,c)
			end
		end
	end

	-- header

	local bits=1
	while highest >= 1<<bits do
		bits+=1
	end

	putnum(w-1)
	putnum(h-1)
	putnum(bits-1)
	putnum(#el-1)
	for i=1,#el do
		putval(el[i],bits)
	end


	-- data

	local pr={} -- predictions

	local dat={}

	for y=y0,y0+h-1 do
		for x=x0,x0+w-1 do
			local v=vget(x,y)  

			local a=0
			if (y>y0) a+=vget(x,y-1)

			-- create vlist if needed
			local l=pr[a]
			if not l then
				l={}
				for i=1,#el do
					l[i]=el[i]
				end
				pr[a]=l
			end

			-- add to vlist
			add(dat,vlist_val(l,v))
			
			-- and to running list
			vlist_val(el, v)
		end
	end

	-- write
	-- store bit-0 as runtime len
	-- start of each run

	local nopredict
	local pos=1

	while pos <= #dat do
		-- count length
		local pos0=pos

		if nopredict then
			while dat[pos]!=1 and pos<=#dat do
				pos+=1
			end
		else
			while dat[pos]==1 and pos<=#dat do
				pos+=1
			end
		end

		local splen = pos-pos0
		putnum(splen-1)

		if nopredict then
			-- values will all be >= 2
			while pos0 < pos do
				putnum(dat[pos0]-2)
				pos0+=1
			end
		end

		nopredict=not nopredict
	end

	if (bit!=1) dest+=1 -- flush

	return dest-dest0
end



__gfx__
ffffff0ffffff0df1c6a1420f8b65ff894e86cc21a31fc51be1f42438912bd29c2287d84448902bc2d720aeabc1f4e2771dd0fb4e936e8d1f8721dc294083037
b952b8d11bd1f428b980b4e933cd1297e119d4cf219c194262190b1a2f309cc71cc20603666971427973bf61268f544562283ab1e8469cf212932f63a26fc5b8
0ef04047617c779a521cf101d42ecc6bd63b8c858a48586307c24ec4c91412c0eab0c8bdc5690139c129731194461c244221907d115139d699429f8787074211
12cf42b38544e33d461b901b8409d2512cd62b8d3f5c1483740746a2c29f4b4cf46a6290529c29429ad2d2b4bdc49de94c064346098f6b509669848a8ec05958
3bb46cc030c2968c4c12c2e9e79660fc2004f9c132f66f4c0b44f841959503c32995229148ccc288946291f067463f84c53128c1eaa52f7ca5228d424f818b23
c5ae0130a709d288d20897e834ce8809761ef0c0f7467852c20700936c062fe1946329b23c22222127429cc8c616bd742e0e069836dce7a5b32914627c6b4e78
5e0e856b0c09e698c1329f181952693604c0f356e0df9e1ada94e48907729e12b4224019c48521198aa0f8229641ef75a2c36681becc5b1968a529444242940f
38469894c3989031939f39fc482fd276639c254c132188d3bde94461c6b8629c2901f943527418c224ef40ced4d7d76426e899e246086209897423333594016d
16c7cfca1682cf0bc9960b8868c4a6ce96d29a666bc6532b1c0778fd985858bf0cc2198a36a46281dc538c2b48502f4795d39c569b972325f175231e80fb4304
2d57b1f4cc2062608a1e098c1742d8321749d1f7b4948742cf0054fabe8cc2447e811ac4694020306d48c7b0990444ce002cd11e0eae4c103b0f9156838ce1c5
3b1c239d44ea9424747282974ea4c72f34d1ba423398b4c2c66393e88d5909ccab5ac0b46967c248369d472176261c087337ea6960e069421d729d24ea944280
e32ca44d1942e0b9ca752b8872315b98c29e698dcec852bc9457c8214a42292c1689804c1bc31227cf298462ba7a94c44461b474c336a87e06979bf7c55ceb42
3c6bf294c72eda533b97a9074a1074e70ceac59bbb05d50942ad5aabab6e69feaf721c82b0853f58303f4078d33c61786664ebc4299483c0be72b3f9427d6dc1
f0c1e6eef616308840482598801c3046b3bb5e8df0b2280c466894e2153e853953e47a53301481e097294958421464e09a092f38126285482c190ea82ea34294
277eb8c2088b4a4292c66d5634d400921fcb0a9af54f307d1e19c21fe00740028148b21e8d24cea529830fa109d6e784df19010a019f14a80fe1029e8cc0f6a9
c4cb10b6691e7accb6148c072b0742394a3d80b84239442cfcc5a66ea4c3cf994fb529286082048d2163394ef80f3c3ec98669723dcc3378e53c8c2276862c07
00102c011709a52e94a748b284c2194d6d052e9644179db488c98700c4c40c127002ae84522988433c83acb670e86522b9523286b7426390057e319933626542
7078c311c3244e00cc16697b1c42cf1bc6e19c19028c439e18198a40d3b85b31190f0f4389180e9d0c2a56c10451624b48761290e13f519583314230488e8f76
a3b467d1311742b6e7889367817467cc4834cc129941b90b27e210523c62073050b6681c26bd82fca2b36c04059d3078b26137f456a89e70355a4148fa03d8d4
f0d3af48331b55d3fd29d0a1e8d169020b4298729521e5b095e201890f29062f441f74b6eec4a297c425f0611b5994d431d440f220881a802c7109d64a1340c1
22c1d9920d780d49a12b9672261669c03c732a80c068c0f15461242908cc621b633ed306f07473a29a5b5b456ebe2144c890822cd39264872306e81cd26b1984
8d142c912163c1cf2e1261b80e39a48b2cd9034c02b0e789cea0b40ce62990fca3c0fa9e8090752b4286862db236126dc2067498fa003669dc47938e62919e39
48c990852c16248d34a2024294229a18ae1197e148b24ab013b2bf367c2b5a0a229cd629082c4446180274690942bce0d8934698483a80ea04d10238b83a53a2
2862368f21091a69606962b809983224719487242480b940c64b60897a102ea59806710eb84c41854746611e93219c203cb990362137cac442fb4029e0852a94
e06cdd0444842d05c079ac4e954be61d661983625143809229887031a3e9c807ad39994202c87d0135b6ee6ec62bd63199ea104ea803981b800f68f9e80cceb3
611f211598b3b21da05d424e16296d01620097352bcf21119683e0c24ec958e87b2140b3a48722940111367469302762368f56242086848f1e8ec2f3c731609c
13b899c884ce71694e4136ff88b68c4712061e9345cf066688521269de1b3ea43310c40237e1395e5e095b9ac1162f885cb8494cba19e7a0b5e8980188802944
213bd42c38da32f3d2998449c7cd8e61fe1d12144c1985c00282620b426b984a30a19f929423163806423174cee66bc0ce0ad80a22799c2162314c63852e70ea
01c641439d2c154e31b409d280e1b5029320e1c6039e61212b8884790f3d62c024189572fc38cc36843395212dc25c695e2ba849788108540f3d2d5290c08880
5b582862a94111212f0a129461c61c4856e83a13429527428370041913c4cf6a817c8852846981834203434828031712833fd3787f8c393a9fc3d0c4297ec8e9
7c5fd7fc1bbfcbf07fffd6b7fdde5d8df0c398ac351bd0fb8dfff383087380b4ed0778463472e798dfff103204226cec2421f667c24c0fb890ff77128e5988a3
955047217478540f7809ffd76313c598331a016c906cd69d29ffdf1169d23942ff0f0e0bb4480f39e8ffbf184deab2e02c9b80e8c45842f8698f181ffbf4644a
dc021fda1843b45241628809583794ef73c2b9632c6a7502f463cb9c110098e392859503c32aabcff68d26c323f304fba42f7c6b8a4c625a7c0c23c5eac29cff
8e03b648cfa42cf11560b0418c1328ecede22ff71908da8073bc1e8d2bf92bd13323936bd2f3c2f0dd29ffb0d44c511cf41e0df9e12ba95e48dccd94095a9ff7
daf84a398ff9990f891219572eb0b8cff587d81e5ef4e311a27d12b4239c2b97264ef7342623ea5a1bcb2b809f5c7faba17437d194e86b121c10f4484019f7cc
3d639c2189b6d0e707d9aff638f16d8603982239ffa38529558c203cd1eff3e11ee832c21607cc8c4cf49030e9b36963f84e69728ccfc8cafb41852fcabd86cc
f4917844e83299061e82bef06ff38090f62124b7de8c23c46e7a95ce80ca91ec90d804444e002cff000d1f9180a934654be0f3119947680fc32758f4eff1e8c1
c263b54267522648cf761b07c6b131c9994030edccfd3e83e8dc8c11934280e3a434c8cf5dd3944c9998d2c294af423bd676c294efe4ea3275269c1327816220
3db26fd1231aeb388b219c4c46c6970e12bc187e021c33dff9c275394ed32298d2d64e32042f84832b636b5896c546b812bc477813846ff7156e8531fc345e00
b5d317ac61115e9c19e6d5f097ec729c1b4b298388dff52e9d290480e120b3e97a6fbc370311834e03c42798a17ce956d99ffb48402d0464222e14c1f3170611
20740eaadc5785c66ff717ca94520a22052d8cf00bee8344e59f4075596ceff46bf2a11227d294c3fb08cccf099f862406a621bffb412de262873298dd906b63
90e7a4cb443464eff29b278b290b642cb39cd0a9cc4c598f5793e962ef76fc299942f70f7c3ea91a9d2e85856e9974f826ff75c0693c21f4212b4c5122b09c2b
d6497c3d0ae1976ffbdd67909444b913a5e5b34d12619c569490ad531b9406fffd4e16222bc3e9578958b8362998c33409864e0494effab4a07821c37c0695ac
834c398d860da487678621c1267cff533b4b919be88893292f3402229343531a22e09d4688dff81539465c02fc225e91952447905bc0e8c26139ac4cff53d652
6ff43983719c285711385bfc15d0a0d4b42bffb6513a20ef864cd984b133bdd85bc48998eff7d295213340c180741a047b4852c7297626d8529dff9904952048
58c69c87388ef2ddab84a2b3effd74a36a760ce03cd857199483fcdc25b90ff362906f600212940f3c8c5277646469ffb7aea481d85300741eb600c7bd6edc6b
566bff5bc8400927487a08b24a90fe59529546429fff628c2b43170b0683200f4439baf783efff3431963901e9068016308c2cffff2539c200f6803644c17c1c
efff71c8ee9488b18462c13da8a4cfffd26b11908b19c2b8c695f84bfff7b8e68c6098bd421d52452932bdfffd2e8538c4ed746114e80a9784a9fffb527c1d48
f1212224f84a936225ffffbce9e1b5e7031313a3c6bd36fff70380f21a1c14b9c1944effff5398b580940c6295212fffff01e42230b028b216afffff29db810b
1405c8098cfff1c52e11421194407429909fff382fc8ca942249c0214efff4e213e098807481ff37ffffff0ffffff0d75003e479db402bd29c2287d84448902b
c2d720a7454de8723374f11e2956b4e8c63ab9d59d62c3f34b6b5258344dda69c2674467421cd44862dc6b7257c29c6262b9d612ed98428e1c28ef5948c61a6f
38421f54c42060366694097e1b7c47b6c6b13d8546bc61952e8813846f78860e8d69cf2121b7b131b7ea54c4c87444294399572b3f942bda594c14cef91bd6b9
d46c24522b0d60e858c9999ab0304266669b44d836b56d99f38cf04299462b0612219848be88a89c6bc429c62261c2240e84075c07d161b9df1cea02b8d02619
02b5a248bd461b42e0240472ef0e30751a1bf9842b46948d291b4b9c49de94c06c4c2019000952e780f1d480c4d422f74029c0b1e0161af5291c3b008cc19505
96b740e7a4cb442464ef0c0b46262984641b32b984c53120ea38521e98994ea4cff1ce7902211b0403d3e1195c22fc0f7060f421f042bd332bcc331db681919f
74423124e8446646b0b7c14c1c91e853331c1bcc8d63a0f432a62914644e797229684e7009a95e80781e7a4c165ea34d8485280add21b9408a488cf398c31298
84c458766295438f34e70e85c88e29128443270a42a08fb6b01cf02b52a21f4262c429fb7a9987e163a44b23e95d290e41b242cf2dc444690bd86a9c2903b882
2743832909b6b9d49c03746b99044c12b9c011a82f7c19c2321386a9898a4e08d11e70edc29259c8c6b0a6d1c1b5c26259b442139f7ce96c29a99d2b5d8c2032
778f3642b0e9e840e80393461c0a6366b090f7442fd0299429528c3d523fc61cdc31460d0111c4651c28d2c062226632ff096800a28342274361162fc1c2e322
90bc81111691ba8c2e0114263b4680e718146c0c060cab0cc51c20222c1048a4d1d646f07c3bcc2194d6d30dc2ef99954421948c8e40b8cf198f8f384219848d
142c9b842639343cf69042b5bc212c1b4601176a9d0309731f344ea4c2900421c2bd1be03cf1c3230a742988723139a4294f834ca68b26942921740d90813bd2
e67c423b131d7263bf321743116ea30952954446c6b01fe44214f069386b274e013862111b2bb6b43ba3e098e19d69f72c1928436c4f8636b48a6698c69d22b4
c11700274d438e13b12e80463cf0c17c23b8c3e010f780eb4a942259e2bda59e9f467c1b4b22e08a17085616d4001f46a01bd89c8c60b8cf1cd2e241c4e03cc2
7946b4e8d1bda3390cc134442fb402dd0842dd4e02b0fb073888485480c191eaacc3f42b03311fca58624841944c38142997e046f33fc4df12f17e074c6d8302
66109b20b526420073fb07a0146b9f125f1d0203519842902469119652489c0cb269def0eb0743940f352e52a1232033e129401448d195e08c99dc61f78d9b17
8995ea4cf627661b1426252b44e7b4c97442bf9f17cc43bc3b8d21f4ce8b06468c17c617854279526089046ec767421fbc2c5744952298d61a0f42b74408c884
e8d570e062402228421944c6390f40922ffb93012369c140dca0b8402a670932179ce9c4e00541318521bd442d149780f7080f78132a3e140993290f40d9c4b0
c21102c562b689c401bd026fb58381784e0e91d89656461394cc92270428bc36bc84e00e1e9d1039e61212b8807c8f929cf08291374e9d362c444219841f0368
2c13611b32bc563192f01320c268f561b2fc0b76293428ad30262b444a27984262e2032399230316993e84c09469c190ef89dec4c618131183244a2408ad8952
4207c21191180a99050162e2c0fb43d5e3299479c0f8e146b13001c46462bd57d1f7a3eff4d096766918e1b58664b8c29640d836a9c01071537c3dec5694c39d
e9b28c84195c5b144ce8840f84e8a9cb701b783e9d22984a6de18b2b8b8da13ed3a297e193e9d317d229a5fa30dc266237b95742234e02833194d2215ea8c846
e63be8442ce02837194d84497c596774e789c175269d10094094e9d13c0a6196237752db21bc600742842fca3c400e86cc38600326932ef1b946653b5f9c2469
30ea21f5106cc2b8f7c62995cc6df2b098721693c512d422a68d5b76bc2298425195e943fc385d512d4883ce167de953b8422945469d0d34c31c590e0708c28f
187addc46862368407066540750e0708c28f187e8dae091a9c81874d2891f08d86300bc13388baf011ce208a1120c0063a530cc3fcc02eac1440bb00353bc888
ee1212fbc029360c21d42703648889464cc1b38984e7904470c21d42703290e84e0344d42ac21254311f06748d872324d81c217c4a28601254311f062c13e9c8
0a9c39569902293e84c09482b721709800f683a2b469d6dce0dd1104ea803983854087383e96b1960a848c3c42da7648d270097332b02746b54794459097c139
4be0489004ed49b69cc2c67480f09c2511167469302762f8da887294485e0b84e98421444c8d195e08c994d7b211d527c180811fcd2b467a99d611224f9ca934
c4a4e94ce71694e43362b08d0b8c3c1374c21017440ced7c395a92988091a61785c19bc39900620993f99c231960f07c183422402f8029442178d694870b5740
3b60709d27c2112011142984266b94870b5761213ca2b420830d34d2850be442d10d80e98165b94480541318521be442d10d9c8c11401454fae211d522288c60
b6c1331e8024e1c1e8bc4690399026b1ca1589144c3432427c10e19e10958da848c2222fc2189cc60113a2242740c34b1894774848c2222fc23284207851b550
97843d8c121100b870b5e919421c19942ca94e2b744ac34c00c2e1c2252f0e9098564a4a19852e83e88129c2932186222652384246b68d2890bcc17c26842b4e
94042e84c683438d3943519280317128b23748139940e043519280317120e0e97b799a814e872d88932f174a1f002c2160b44e89c17d19baf7aefb2f46a9ce8a
8d68f5cace02b86a94260706e0369c8640e12cd78c5783c1d03ea09432c62ef1bc12989542c68ac3081980e39a58b6ad771299733b013cf27c61b90e86383294
2f388a909075429021a9c579695310da56a13b40ef088a4c9932bd63b8c5305bd834480b78c40484231232d404803a193248b52f09899de09cb9884227190060
311b5028c194242295e3e0e1c1984488cf4c6c019f44795c6275295026638529c22462e880de0d114846a4328432e724d421a42942942179444184c646211e95
6051c40843b44245460ac2c9b42133c00b4c8c40f43840129905c0798c327829b0059866c06161087445798560123c288942f8c39894202c8779322b48f29980
6780e90423c529e2106709d2885208f5a03eb3c4c9944607f236142244c4091fe1b8d85ea409888848c29c327090d07c10327e409f36906994429c19d8f16b07
4290812dc219e84e124e19360180a121e78362af3484664e484acddd8c1a94224019c4852119f507142ab010b0fc16838701e1c0128e4c71639852944424621c
32952f070be61932c4e112e5844e7042ac5569d42bc6e16c280fc6b522b02bd3c59c21981bf4e6479ce50f342944ad5842c10b58c00d084cc129af52b4211638
064231744e1e12c058f16b5a1cc6a8c4a6ce96c21b74ea011b050d46b07c0f78801616c513161c6836646281bc51842b4c327d224024189462fc3807701e801e
e209469e63e98950c4c0053ef0b6618101482b05e39a52c323ed4014bb5621c47c81162b420bf60ca036898fd24d81abdc124c61f90128662b1a1321699c622b
842f4ad3c1ff7b66b9c6b6617905c6a3198d5909c82943b04294b16f83ecc8a3278e88c47295ca255b84a90e8852944f942246199401c7c85989326178c46e97
014073042174483462be2954e70bf42802b42093403406e8402bc1762266b78906800742095e8f7211361d6c4eb90b529163944e4c13b031d88a17408c5db81e
884262632a2c110c2b88d2d0f4001610be21e02c3f0808de26691ebdc8eb1cc08ce22691ebc4262126b4c691020482d00128700b52dd4e705c5128780c22ba8c
f0f48020917001481e0394a40218c84c40448cf03c5314642220209f1612221424300e2b294a0bac4238a8048432871c9282223930cb009cc770070102814876
2c121227d2948f50c594488c35942cf202bdc522133987f00946891ed46995ed4cf011cb195297317439c0dd239809c842d944854291bc42cdcf0cd4242cfc0a
1cc4c80228608230163363394ef0ef874e0787e1229f38f3e16209425a1c070c40803440616987290952ea017d5299852e9424698b2485885e32003131078400
1594522980dc81acb27666990dc81acbc5b4484219488c244631c3244e00442395e19538958f9283cc2f61661ef032b622dad442c3c3d06b040fc13856b23e69
1c0fc13169dac0c402293474e002446cf33918d57c44c19c8fde01102f554c19c69949d5942329c0e94460b90cd0411bc64607d364baf46e934299528c0eb763
9a3e964564a220a4148fa03983627074f9cc998f202a3eec91c9b84614e944a6abc38804487940397228f1e83e117bc389c313cf1d7c27722d42f430254a802c
71094a983c01070686726e83d293f4340c1583a31b41ce85398c310603468f8a80409001612bdcc18bf000420426366b5668fa2b4274040140411e6c2c4fc085
099f92906ec0f420c9e8037b8d1d5483c622f40f94d2c5b8db108462d4e0f3d8eb9034c10d93cdd95f01d2148b22940d0d4c51c854b104e8ecc967509894320c
1d89748c2037e834212ca4a0232990920ac11e9485ae70945065b322fc3195d51662606e014c6108c12112b0d070b068e198b28b3b63170b4424f86c13c52904
4688563894274481e044b02c31c014206c18f1a28cc3121284053b30464d66a04263694487e80c200f6806264ce46611cb128d6995447701270014842d05c079
2fce902e6029a4d039fe9572f40cdaabc62533f8d10b85237466290803edd111908b19e1b423197c3170229569bb95b956998c314680fc130a4fb3a117622042
ee4f02c114d79c9b3611457ee66e0e1145e848c6af54442e11e830b0937203edac1829d1399b8568c4fd7c625a972191f4529c4e891981d090f3c1f43cf0908d
31c2fc6f0e294e129cf09066f409ce864888c10f98ba8c1ab018d2c378742fb4c311bc3326bde327862e701140b474c6bd365e0b5f1593245e11d871694cb429
de3f0c2f19326121fa52ce3f48429322242c53998449c7273698b102901f832c27b8e61fe6909401f8329426009756962c601c8462e881e42010670fc131e1a1
ee667c1491670fc311454ac721ce0a0a9c61e81e41300601c1e8ccf032fd194200388874d0294db33c02418199c3f021f80274e119424a95ee7447e9d6274e13
9c0966922d4876e85290c088a0561ac33ceac10121270e9c518469862ad488090970748421945001546c031fbda13e0c19c1142b4c8b2c3e0c83070b04698183
42f40cdaabc62533f8d10b85237466290803edd111908b19e1b423197c3170229569bb95b956998c314680fc130a4fb3a117622042ee4f02c114d79c9b361145
7ee66e0e1145e848c6af54442e11e830b0937203edac1829d1399b8568c4fd7c625a972191f4529c4e891981d090f3c1f43cf0908d31c2fc6f0e294e129cf090
66f409ce864888c10f98ba8c1ab018d2c378742fb4c311bc3326bde327862e701140b474c6bd365e0b5f1593245e11d871694cb429de3f0c2f19326121fa52ce
3f48429322242c53998449c7273698b102901f832c27b8e61fe6909401f8329426009756962c601c8462e881e42010670fc131e1a1ee667c1491670fc311454a
c721ce0a0a9c61e81e41300601c1e8ccf032fd194200388874d0294db33c02418199c3f021f80274e119424a95ee7447e9d6274e139c0966922d4876e85290c0
88a0561ac33ceac10121270e9c518469862ad488090970748421945001546c031fbda13e0c19c1142b4c8b2c3e0c83070b046981834278742fb4c311bc3326bd
e327862e701140b474c6bd365e0b5f1593245e11d871694cb429de3f0c2f19326121fa52ce3f48429322242c53998449c7273698b102901f832c27b8e61fe690
9401f8329426009756962c601c8462e881e42010670fc131e1a1ee667c1491670fc311454ac721ce0a0a9c61e81e41300601c1e8ccf032fd194200388874d029
4db33c02418199c3f021f80274e119424a95ee7447e9d6274e139c0966922d4876e85290c088a0561ac33ceac10121270e9c518469862ad48809097074842194
5001546c031fbda13e0c19c1142b4c8b2c3e0c83070b046981834200000000000000000000000000000000000000000000000000000000000000000000000000
